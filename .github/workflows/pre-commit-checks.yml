name: Pre-commit Checks

on:
  create: {}
  push:
    branches:
      - main
      - 'changes/**'

env:
  GERRIT_URL: https://gerrithub.io

jobs:
  pre-commit:
    name: Run pre-commit hooks
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout full history so hooks can see all files
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ github.event.inputs.commit_sha }}

      # 2) Cache pre-commit environments for speed
      - name: Cache pre-commit
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pre-commit-

      # 3) Set up Python for pre-commit
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # 4) Install pre-commit
      - name: Install pre-commit
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit

      # 5) Run all pre-commit hooks against the repo
      - name: Run pre-commit
        id: tidy
        run: pre-commit run --all-files --show-diff-on-failure

      - name: Extract Changeâ€‘Id
        id: extract
        # GITHUB_REF is like "changes/123"
        run: |
          change_id="${GITHUB_REF#refs/heads/changes/}"
          echo "change_id=$change_id" >> $GITHUB_OUTPUT

      - name: Post Clean-Code to Gerrit
        if: always()
        shell: bash
        run: |
          RUN_URL="https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}"
          if [[ "${{ job.status }}" == "success" ]]; then
            echo "VOTE=+1" >> $GITHUB_ENV
          else
            echo "VOTE=-1" >> $GITHUB_ENV
          fi
          echo ${VOTE}
          curl -u "${{ secrets.GERRIT_USER }}:${{ secrets.GERRIT_PASSWORD }}" \
               -H "Content-Type: application/json" \
               -X POST \
               -d '{
                 "message": "GitHub Actions run",
                 "labels": { "Clean-Code: '"${VOTE}"' }
               }' \
               "${{ env.GERRIT_URL }}/a/changes/${{ steps.extract.outputs.change_id }}/revisions/current/review"
