name: Pre-commit Checks

on:
  workflow_call:
    inputs:
      gerrit_change_id:
        description: 'Gerrit change id to post the result'
        required: false
        type: string
        default: ''

jobs:
  pre-commit:
    name: Run pre-commit hooks
    runs-on: ubuntu-latest

    steps:
      # 1) Checkout full history so hooks can see all files
      - name: Checkout code
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      # 2) Cache pre-commit environments for speed
      - name: Cache pre-commit
        uses: actions/cache@v3
        with:
          path: ~/.cache/pre-commit
          key: ${{ runner.os }}-pre-commit-${{ hashFiles('.pre-commit-config.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pre-commit-

      # 3) Set up Python for pre-commit
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      # 4) Install pre-commit
      - name: Install pre-commit
        run: |
          python -m pip install --upgrade pip
          pip install pre-commit

      # 5) Run all pre-commit hooks against the repo
      - name: Run pre-commit
        id: tidy
        run: pre-commit run --all-files --show-diff-on-failure

  report:
    if: ${{ inputs.gerrit_change_id != '' }}
    needs: pre-commit
    name: Report Result to Gerrit
    runs-on: ubuntu-latest
    steps:
      - name: Get VOTE
        if: always()
        id: vote
        run: |
          if [[ "${{ needs.pre-commit.result }}" == 'success' ]]; then
            echo "vote=+1" >> $GITHUB_OUTPUT
          else
            echo "vote=-1" >> $GITHUB_OUTPUT
          fi

      - name: Post Clean-Code to Gerrit
        if: always()
        shell: bash
        env:
          RUN_URL: "https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}/job/${{ github.job }}"
        run: |
          echo ${VOTE}
          curl -u "${{ secrets.GERRIT_USER }}:${{ secrets.GERRIT_PASSWORD }}" \
               -H "Content-Type: application/json" \
               -X POST \
               -d '{
                 "message": "GitHub Actions run on ${{ env.RUN_URL }}",
                 "labels": { "Clean-Code": "${{ steps.vote.outputs.vote }}" }
               }' \
               "https://gerrithub.io/a/changes/${{ inputs.gerrit_change_id }}/revisions/current/review"
